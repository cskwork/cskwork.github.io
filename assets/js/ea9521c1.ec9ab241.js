"use strict";(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[76055],{3905:(e,o,i)=>{i.d(o,{Zo:()=>s,kt:()=>f});var n=i(67294);function r(e,o,i){return o in e?Object.defineProperty(e,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[o]=i,e}function t(e,o){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);o&&(n=n.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),i.push.apply(i,n)}return i}function a(e){for(var o=1;o<arguments.length;o++){var i=null!=arguments[o]?arguments[o]:{};o%2?t(Object(i),!0).forEach((function(o){r(e,o,i[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):t(Object(i)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(i,o))}))}return e}function l(e,o){if(null==e)return{};var i,n,r=function(e,o){if(null==e)return{};var i,n,r={},t=Object.keys(e);for(n=0;n<t.length;n++)i=t[n],o.indexOf(i)>=0||(r[i]=e[i]);return r}(e,o);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(n=0;n<t.length;n++)i=t[n],o.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var d=n.createContext({}),c=function(e){var o=n.useContext(d),i=o;return e&&(i="function"==typeof e?e(o):a(a({},o),e)),i},s=function(e){var o=c(e.components);return n.createElement(d.Provider,{value:o},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var o=e.children;return n.createElement(n.Fragment,{},o)}},m=n.forwardRef((function(e,o){var i=e.components,r=e.mdxType,t=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(i),m=r,f=p["".concat(d,".").concat(m)]||p[m]||u[m]||t;return i?n.createElement(f,a(a({ref:o},s),{},{components:i})):n.createElement(f,a({ref:o},s))}));function f(e,o){var i=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var t=i.length,a=new Array(t);a[0]=m;var l={};for(var d in o)hasOwnProperty.call(o,d)&&(l[d]=o[d]);l.originalType=e,l[p]="string"==typeof e?e:r,a[1]=l;for(var c=2;c<t;c++)a[c]=i[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,i)}m.displayName="MDXCreateElement"},65125:(e,o,i)=>{i.r(o),i.d(o,{contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var n=i(87462),r=(i(67294),i(3905));const t={title:"ionic cordova build",sidebar_label:"cordova build"},a=void 0,l={unversionedId:"cli/commands/cordova-build",id:"cli/commands/cordova-build",isDocsHomePage:!1,title:"ionic cordova build",description:"Ionic Cordova Build for Android and iOS Platform Builds",source:"@site/docs/cli/commands/cordova-build.md",sourceDirName:"cli/commands",slug:"/cli/commands/cordova-build",permalink:"/docs/cli/commands/cordova-build",editUrl:"https://github.com/ionic-team/ionic-cli/edit/develop/packages/@ionic/cli/src/commands/cordova/build.ts",tags:[],version:"current",frontMatter:{title:"ionic cordova build",sidebar_label:"cordova build"},sidebar:"cli",previous:{title:"config unset",permalink:"/docs/cli/commands/config-unset"},next:{title:"cordova compile",permalink:"/docs/cli/commands/cordova-compile"}},d=[{value:"platform",id:"platform",children:[],level:3},{value:"Options",id:"options",children:[],level:3},{value:"Advanced Options",id:"advanced-options",children:[],level:3},{value:"Examples",id:"examples",children:[],level:2}],c={toc:d},s="wrapper";function p(e){let{components:o,...i}=e;return(0,r.kt)(s,(0,n.Z)({},c,i,{components:o,mdxType:"MDXLayout"}),(0,r.kt)("head",null,(0,r.kt)("title",null,"Ionic Cordova Build for Android and iOS Platform Builds"),(0,r.kt)("meta",{name:"description",content:"Like running Cordova Build directly, Ionic Cordova Build also builds web assets from Ionic Build and provides friendly checks for Android and iOS platforms."})),(0,r.kt)("p",null,"Use Cordova to build for Android and iOS platform targets"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ ionic cordova build [platform] [options]\n")),(0,r.kt)("p",null,"Like running ",(0,r.kt)("inlineCode",{parentName:"p"},"cordova build")," directly, ",(0,r.kt)("inlineCode",{parentName:"p"},"ionic cordova build")," also builds web assets from ",(0,r.kt)("inlineCode",{parentName:"p"},"ionic build")," and provides friendly checks for Android and iOS platforms."),(0,r.kt)("p",null,"To pass additional options to the Cordova CLI, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"--")," separator after the Ionic CLI arguments."),(0,r.kt)("p",null,"The Cordova CLI requires a separator for platform-specific arguments for Android ",(0,r.kt)("a",{parentName:"p",href:"https://cordova.apache.org/docs/en/latest/guide/platforms/android/index.html#using-flags"},"builds"),", so an additional separator is required for the Ionic CLI, but it is not required for iOS ",(0,r.kt)("a",{parentName:"p",href:"https://cordova.apache.org/docs/en/latest/guide/platforms/ios/index.html#using-flags"},"builds"),". See the example commands for usage with separators. To avoid using flags, consider using ",(0,r.kt)("inlineCode",{parentName:"p"},"--buildConfig")," with a ",(0,r.kt)("strong",{parentName:"p"},"build.json")," file."),(0,r.kt)("h3",{id:"platform"},"platform"),(0,r.kt)("p",null,"The platform to build (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"android"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ios"),")"),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--no-build"),": Do not invoke an Ionic build\n"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--debug"),": Mark as a debug build\n"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--release"),": Mark as a release build\n"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--device"),": Deploy build to a device\n"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--emulator"),": Deploy build to an emulator\n"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--prod"),": Flag to use the ",(0,r.kt)("inlineCode",{parentName:"li"},"production")," configuration\n")),(0,r.kt)("h3",{id:"advanced-options"},"Advanced Options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--buildConfig=<file>"),": Use the specified build configuration\n"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--configuration=<conf>"),": Specify the configuration to use (or ",(0,r.kt)("inlineCode",{parentName:"li"},"-c"),")\n"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--source-map"),": Output source maps\n")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'$ ionic cordova build android\n$ ionic cordova build android --buildConfig=build.json\n$ ionic cordova build android --prod --release -- -- --gradleArg=-PcdvBuildMultipleApks=true\n$ ionic cordova build android --prod --release -- -- --keystore=filename.keystore --alias=myalias\n$ ionic cordova build android --prod --release -- -- --minSdkVersion=21\n$ ionic cordova build android --prod --release -- -- --versionCode=55\n$ ionic cordova build android --prod --release --buildConfig=build.json\n$ ionic cordova build ios\n$ ionic cordova build ios --buildConfig=build.json\n$ ionic cordova build ios --prod --release\n$ ionic cordova build ios --prod --release -- --developmentTeam="ABCD" --codeSignIdentity="iPhone Developer" --packageType="app-store"\n$ ionic cordova build ios --prod --release --buildConfig=build.json\n')))}p.isMDXComponent=!0}}]);