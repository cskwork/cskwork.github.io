"use strict";(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[63663],{3905:function(t,e,n){n.d(e,{Zo:function(){return d},kt:function(){return m}});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),p=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},d=function(t){var e=p(t.components);return a.createElement(s.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,s=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),k=p(n),m=r,c=k["".concat(s,".").concat(m)]||k[m]||u[m]||l;return n?a.createElement(c,i(i({ref:e},d),{},{components:n})):a.createElement(c,i({ref:e},d))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=k;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},55541:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return k}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),i=["components"],o={title:"Status Bar Capacitor Plugin API",description:"The StatusBar API Provides methods for configuring the style of the Status Bar, along with showing or hiding it.",editUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/status-bar/README.md",editApiUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/status-bar/src/definitions.ts",sidebar_label:"Status Bar"},s="@capacitor/status-bar",p={unversionedId:"native/status-bar",id:"version-v6/native/status-bar",isDocsHomePage:!1,title:"Status Bar Capacitor Plugin API",description:"The StatusBar API Provides methods for configuring the style of the Status Bar, along with showing or hiding it.",source:"@site/versioned_docs/version-v6/native/status-bar.md",sourceDirName:"native",slug:"/native/status-bar",permalink:"/docs/v6/native/status-bar",editUrl:"https://github.com/ionic-team/capacitor-plugins/edit/main/status-bar/README.md",tags:[],version:"v6",frontMatter:{title:"Status Bar Capacitor Plugin API",description:"The StatusBar API Provides methods for configuring the style of the Status Bar, along with showing or hiding it.",editUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/status-bar/README.md",editApiUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/status-bar/src/definitions.ts",sidebar_label:"Status Bar"},sidebar:"version-v6/native",previous:{title:"Splash Screen",permalink:"/docs/v6/native/splash-screen"},next:{title:"Text Zoom",permalink:"/docs/v6/native/text-zoom"}},d=[{value:"Install",id:"install",children:[],level:2},{value:"iOS Note",id:"ios-note",children:[],level:2},{value:"Example",id:"example",children:[],level:2},{value:"API",id:"api",children:[{value:"setStyle(...)",id:"setstyle",children:[],level:3},{value:"setBackgroundColor(...)",id:"setbackgroundcolor",children:[],level:3},{value:"show(...)",id:"show",children:[],level:3},{value:"hide(...)",id:"hide",children:[],level:3},{value:"getInfo()",id:"getinfo",children:[],level:3},{value:"setOverlaysWebView(...)",id:"setoverlayswebview",children:[],level:3},{value:"Interfaces",id:"interfaces",children:[{value:"StyleOptions",id:"styleoptions",children:[],level:4},{value:"BackgroundColorOptions",id:"backgroundcoloroptions",children:[],level:4},{value:"AnimationOptions",id:"animationoptions",children:[],level:4},{value:"StatusBarInfo",id:"statusbarinfo",children:[],level:4},{value:"SetOverlaysWebViewOptions",id:"setoverlayswebviewoptions",children:[],level:4}],level:3},{value:"Enums",id:"enums",children:[{value:"Style",id:"style",children:[],level:4},{value:"Animation",id:"animation",children:[],level:4}],level:3}],level:2}],u={toc:d};function k(t){var e=t.components,n=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"capacitorstatus-bar"},"@capacitor/status-bar"),(0,l.kt)("p",null,"The StatusBar API Provides methods for configuring the style of the Status Bar, along with showing or hiding it."),(0,l.kt)("h2",{id:"install"},"Install"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @capacitor/status-bar\nnpx cap sync\n")),(0,l.kt)("h2",{id:"ios-note"},"iOS Note"),(0,l.kt)("p",null,'This plugin requires "View controller-based status bar appearance"\n(',(0,l.kt)("inlineCode",{parentName:"p"},"UIViewControllerBasedStatusBarAppearance"),") set to ",(0,l.kt)("inlineCode",{parentName:"p"},"YES")," in ",(0,l.kt)("inlineCode",{parentName:"p"},"Info.plist"),". Read\nabout ",(0,l.kt)("a",{parentName:"p",href:"https://capacitorjs.com/docs/ios/configuration"},"Configuring iOS")," for\nhelp."),(0,l.kt)("p",null,"The status bar visibility defaults to visible and the style defaults to\n",(0,l.kt)("inlineCode",{parentName:"p"},"Style.Default"),". You can change these defaults by adding\n",(0,l.kt)("inlineCode",{parentName:"p"},"UIStatusBarHidden")," and/or ",(0,l.kt)("inlineCode",{parentName:"p"},"UIStatusBarStyle")," in ",(0,l.kt)("inlineCode",{parentName:"p"},"Info.plist"),"."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"setBackgroundColor")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"setOverlaysWebView")," are currently not supported on\niOS devices."),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"import { StatusBar, Style } from '@capacitor/status-bar';\n\n// iOS only\nwindow.addEventListener('statusTap', function () {\n  console.log('statusbar tapped');\n});\n\n// Display content under transparent status bar (Android only)\nStatusBar.setOverlaysWebView({ overlay: true });\n\nconst setStatusBarStyleDark = async () => {\n  await StatusBar.setStyle({ style: Style.Dark });\n};\n\nconst setStatusBarStyleLight = async () => {\n  await StatusBar.setStyle({ style: Style.Light });\n};\n\nconst hideStatusBar = async () => {\n  await StatusBar.hide();\n};\n\nconst showStatusBar = async () => {\n  await StatusBar.show();\n};\n")),(0,l.kt)("h2",{id:"api"},"API"),(0,l.kt)("docgen-index",null,(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#setstyle"},(0,l.kt)("inlineCode",{parentName:"a"},"setStyle(...)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#setbackgroundcolor"},(0,l.kt)("inlineCode",{parentName:"a"},"setBackgroundColor(...)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#show"},(0,l.kt)("inlineCode",{parentName:"a"},"show(...)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#hide"},(0,l.kt)("inlineCode",{parentName:"a"},"hide(...)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#getinfo"},(0,l.kt)("inlineCode",{parentName:"a"},"getInfo()"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#setoverlayswebview"},(0,l.kt)("inlineCode",{parentName:"a"},"setOverlaysWebView(...)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#interfaces"},"Interfaces")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#enums"},"Enums")))),(0,l.kt)("docgen-api",null,(0,l.kt)("h3",{id:"setstyle"},"setStyle(...)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"setStyle(options: StyleOptions) => Promise<void>\n")),(0,l.kt)("p",null,"Set the current style of the status bar."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,(0,l.kt)("a",{href:"#styleoptions"},"StyleOptions")))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"setbackgroundcolor"},"setBackgroundColor(...)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"setBackgroundColor(options: BackgroundColorOptions) => Promise<void>\n")),(0,l.kt)("p",null,"Set the background color of the status bar."),(0,l.kt)("p",null,"This method is only supported on Android."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,(0,l.kt)("a",{href:"#backgroundcoloroptions"},"BackgroundColorOptions")))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"show"},"show(...)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"show(options?: AnimationOptions | undefined) => Promise<void>\n")),(0,l.kt)("p",null,"Show the status bar.\nOn iOS, if the status bar is initially hidden and the initial style is set to\n",(0,l.kt)("inlineCode",{parentName:"p"},"UIStatusBarStyleLightContent"),", first show call might present a glitch on the\nanimation showing the text as dark and then transition to light. It's recommended\nto use ",(0,l.kt)("a",{href:"#animation"},(0,l.kt)("inlineCode",{parentName:"p"},"Animation.None"))," as the animation on the first call."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,(0,l.kt)("a",{href:"#animationoptions"},"AnimationOptions")))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"hide"},"hide(...)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"hide(options?: AnimationOptions | undefined) => Promise<void>\n")),(0,l.kt)("p",null,"Hide the status bar."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,(0,l.kt)("a",{href:"#animationoptions"},"AnimationOptions")))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"getinfo"},"getInfo()"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getInfo() => Promise<StatusBarInfo>\n")),(0,l.kt)("p",null,"Get info about the current state of the status bar."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns:")," ",(0,l.kt)("code",null,"Promise","<",(0,l.kt)("a",{href:"#statusbarinfo"},"StatusBarInfo"),">")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"setoverlayswebview"},"setOverlaysWebView(...)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"setOverlaysWebView(options: SetOverlaysWebViewOptions) => Promise<void>\n")),(0,l.kt)("p",null,"Set whether or not the status bar should overlay the webview to allow usage\nof the space underneath it."),(0,l.kt)("p",null,"This method is only supported on Android."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,(0,l.kt)("a",{href:"#setoverlayswebviewoptions"},"SetOverlaysWebViewOptions")))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"interfaces"},"Interfaces"),(0,l.kt)("h4",{id:"styleoptions"},"StyleOptions"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Since"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"style"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,(0,l.kt)("a",{href:"#style"},"Style"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{href:"#style"},"Style")," of the text of the status bar."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,l.kt)("h4",{id:"backgroundcoloroptions"},"BackgroundColorOptions"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Since"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"color"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},"A hex color to which the status bar color is set. This option is only supported on Android."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,l.kt)("h4",{id:"animationoptions"},"AnimationOptions"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Since"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"animation"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,(0,l.kt)("a",{href:"#animation"},"Animation"))),(0,l.kt)("td",{parentName:"tr",align:null},"The type of status bar animation used when showing or hiding. This option is only supported on iOS."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,l.kt)("h4",{id:"statusbarinfo"},"StatusBarInfo"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Since"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"visible"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether the status bar is visible or not."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"style"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,(0,l.kt)("a",{href:"#style"},"Style"))),(0,l.kt)("td",{parentName:"tr",align:null},"The current status bar style."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"color"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The current status bar color. This option is only supported on Android."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"overlays"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether the statusbar is overlaid or not. This option is only supported on Android."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,l.kt)("h4",{id:"setoverlayswebviewoptions"},"SetOverlaysWebViewOptions"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Since"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"overlay"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to overlay the status bar or not."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,l.kt)("h3",{id:"enums"},"Enums"),(0,l.kt)("h4",{id:"style"},"Style"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Members"),(0,l.kt)("th",{parentName:"tr",align:null},"Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Since"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"Dark"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"'DARK'")),(0,l.kt)("td",{parentName:"tr",align:null},"Light text for dark backgrounds."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"Light"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"'LIGHT'")),(0,l.kt)("td",{parentName:"tr",align:null},"Dark text for light backgrounds."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"Default"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"'DEFAULT'")),(0,l.kt)("td",{parentName:"tr",align:null},"The style is based on the device appearance. If the device is using Dark mode, the statusbar text will be light. If the device is using Light mode, the statusbar text will be dark. On Android the default will be the one the app was launched with."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,l.kt)("h4",{id:"animation"},"Animation"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Members"),(0,l.kt)("th",{parentName:"tr",align:null},"Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Since"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"None"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"'NONE'")),(0,l.kt)("td",{parentName:"tr",align:null},"No animation during show/hide."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"Slide"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"'SLIDE'")),(0,l.kt)("td",{parentName:"tr",align:null},"Slide animation during show/hide. It doesn't work on iOS 15+."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"Fade"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"'FADE'")),(0,l.kt)("td",{parentName:"tr",align:null},"Fade animation during show/hide."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0"))))))}k.isMDXComponent=!0}}]);