"use strict";(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[34909],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),k=s(n),d=r,c=k["".concat(p,".").concat(d)]||k[d]||m[d]||l;return n?a.createElement(c,i(i({ref:t},u),{},{components:n})):a.createElement(c,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},15743:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return k}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),i=["components"],o={title:"Preferences Capacitor Plugin API",description:"The Preferences API provides a simple key/value persistent store for lightweight data.",editUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/preferences/README.md",editApiUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/preferences/src/definitions.ts",sidebar_label:"Preferences"},p="@capacitor/preferences",s={unversionedId:"native/preferences",id:"native/preferences",isDocsHomePage:!1,title:"Preferences Capacitor Plugin API",description:"The Preferences API provides a simple key/value persistent store for lightweight data.",source:"@site/docs/native/preferences.md",sourceDirName:"native",slug:"/native/preferences",permalink:"/docs/native/preferences",editUrl:"https://github.com/ionic-team/capacitor-plugins/edit/main/preferences/README.md",tags:[],version:"current",frontMatter:{title:"Preferences Capacitor Plugin API",description:"The Preferences API provides a simple key/value persistent store for lightweight data.",editUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/preferences/README.md",editApiUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/preferences/src/definitions.ts",sidebar_label:"Preferences"},sidebar:"native",previous:{title:"FAQ",permalink:"/docs/native/faq"}},u=[{value:"Install",id:"install",children:[],level:2},{value:"Example",id:"example",children:[],level:2},{value:"Working with JSON",id:"working-with-json",children:[],level:2},{value:"API",id:"api",children:[{value:"configure(...)",id:"configure",children:[],level:3},{value:"get(...)",id:"get",children:[],level:3},{value:"set(...)",id:"set",children:[],level:3},{value:"remove(...)",id:"remove",children:[],level:3},{value:"clear()",id:"clear",children:[],level:3},{value:"keys()",id:"keys",children:[],level:3},{value:"migrate()",id:"migrate",children:[],level:3},{value:"removeOld()",id:"removeold",children:[],level:3},{value:"Interfaces",id:"interfaces",children:[{value:"ConfigureOptions",id:"configureoptions",children:[],level:4},{value:"GetResult",id:"getresult",children:[],level:4},{value:"GetOptions",id:"getoptions",children:[],level:4},{value:"SetOptions",id:"setoptions",children:[],level:4},{value:"RemoveOptions",id:"removeoptions",children:[],level:4},{value:"KeysResult",id:"keysresult",children:[],level:4},{value:"MigrateResult",id:"migrateresult",children:[],level:4}],level:3}],level:2}],m={toc:u};function k(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"capacitorpreferences"},"@capacitor/preferences"),(0,l.kt)("p",null,"The Preferences API provides a simple key/value persistent store for lightweight data."),(0,l.kt)("p",null,"Mobile OSs may periodically clear data set in ",(0,l.kt)("inlineCode",{parentName:"p"},"window.localStorage"),", so this\nAPI should be used instead. This API will fall back to using ",(0,l.kt)("inlineCode",{parentName:"p"},"localStorage"),"\nwhen running as a Progressive Web App."),(0,l.kt)("p",null,"This plugin will use\n",(0,l.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/foundation/userdefaults"},(0,l.kt)("inlineCode",{parentName:"a"},"UserDefaults")),"\non iOS and\n",(0,l.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/android/content/SharedPreferences"},(0,l.kt)("inlineCode",{parentName:"a"},"SharedPreferences")),"\non Android. Stored data is cleared if the app is uninstalled."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note"),": This API is ",(0,l.kt)("em",{parentName:"p"},"not")," meant to be used as a local database. If your app\nstores a lot of data, has high read/write load, or requires complex querying,\nwe recommend taking a look at a SQLite-based solution. One such solution is ",(0,l.kt)("a",{parentName:"p",href:"https://ionic.io/docs/secure-storage"},"Ionic Secure Storage"),", a SQLite-based engine with full encryption support. The ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/capacitor-community/"},"Capacitor Community")," has also built a number of other storage engines."),(0,l.kt)("h2",{id:"install"},"Install"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @capacitor/preferences\nnpx cap sync\n")),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Preferences } from '@capacitor/preferences';\n\nconst setName = async () => {\n  await Preferences.set({\n    key: 'name',\n    value: 'Max',\n  });\n};\n\nconst checkName = async () => {\n  const { value } = await Preferences.get({ key: 'name' });\n\n  console.log(`Hello ${value}!`);\n};\n\nconst removeName = async () => {\n  await Preferences.remove({ key: 'name' });\n};\n")),(0,l.kt)("h2",{id:"working-with-json"},"Working with JSON"),(0,l.kt)("p",null,"The Preferences API only supports string values. You can, however, use JSON if you ",(0,l.kt)("inlineCode",{parentName:"p"},"JSON.stringify")," the object before calling ",(0,l.kt)("inlineCode",{parentName:"p"},"set()"),", then ",(0,l.kt)("inlineCode",{parentName:"p"},"JSON.parse")," the value returned from ",(0,l.kt)("inlineCode",{parentName:"p"},"get()"),"."),(0,l.kt)("p",null,"This method can also be used to store non-string values, such as numbers and booleans."),(0,l.kt)("h2",{id:"api"},"API"),(0,l.kt)("docgen-index",null,(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#configure"},(0,l.kt)("inlineCode",{parentName:"a"},"configure(...)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#get"},(0,l.kt)("inlineCode",{parentName:"a"},"get(...)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#set"},(0,l.kt)("inlineCode",{parentName:"a"},"set(...)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#remove"},(0,l.kt)("inlineCode",{parentName:"a"},"remove(...)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#clear"},(0,l.kt)("inlineCode",{parentName:"a"},"clear()"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#keys"},(0,l.kt)("inlineCode",{parentName:"a"},"keys()"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#migrate"},(0,l.kt)("inlineCode",{parentName:"a"},"migrate()"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#removeold"},(0,l.kt)("inlineCode",{parentName:"a"},"removeOld()"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#interfaces"},"Interfaces")))),(0,l.kt)("docgen-api",null,(0,l.kt)("h3",{id:"configure"},"configure(...)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"configure(options: ConfigureOptions) => Promise<void>\n")),(0,l.kt)("p",null,"Configure the preferences plugin at runtime."),(0,l.kt)("p",null,"Options that are ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," will not be used."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,(0,l.kt)("a",{href:"#configureoptions"},"ConfigureOptions")))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"get"},"get(...)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"get(options: GetOptions) => Promise<GetResult>\n")),(0,l.kt)("p",null,"Get the value from preferences of a given key."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,(0,l.kt)("a",{href:"#getoptions"},"GetOptions")))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns:")," ",(0,l.kt)("code",null,"Promise","<",(0,l.kt)("a",{href:"#getresult"},"GetResult"),">")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"set"},"set(...)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"set(options: SetOptions) => Promise<void>\n")),(0,l.kt)("p",null,"Set the value in preferences for a given key."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,(0,l.kt)("a",{href:"#setoptions"},"SetOptions")))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"remove"},"remove(...)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"remove(options: RemoveOptions) => Promise<void>\n")),(0,l.kt)("p",null,"Remove the value from preferences for a given key, if any."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,(0,l.kt)("a",{href:"#removeoptions"},"RemoveOptions")))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"clear"},"clear()"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"clear() => Promise<void>\n")),(0,l.kt)("p",null,"Clear keys and values from preferences."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"keys"},"keys()"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"keys() => Promise<KeysResult>\n")),(0,l.kt)("p",null,"Return the list of known keys in preferences."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns:")," ",(0,l.kt)("code",null,"Promise","<",(0,l.kt)("a",{href:"#keysresult"},"KeysResult"),">")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"migrate"},"migrate()"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"migrate() => Promise<MigrateResult>\n")),(0,l.kt)("p",null,"Migrate data from the Capacitor 2 Storage plugin."),(0,l.kt)("p",null,"This action is non-destructive. It will not remove old data and will only\nwrite new data if they key was not already set.\nTo remove the old data after being migrated, call removeOld()."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns:")," ",(0,l.kt)("code",null,"Promise","<",(0,l.kt)("a",{href:"#migrateresult"},"MigrateResult"),">")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"removeold"},"removeOld()"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"removeOld() => Promise<void>\n")),(0,l.kt)("p",null,"Removes old data with ",(0,l.kt)("inlineCode",{parentName:"p"},"_cap_")," prefix from the Capacitor 2 Storage plugin."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.1.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"interfaces"},"Interfaces"),(0,l.kt)("h4",{id:"configureoptions"},"ConfigureOptions"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Since"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"group"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Set the preferences group. Preferences groups are used to organize key/value pairs. Using the value 'NativeStorage' provides backwards-compatibility with ",(0,l.kt)("a",{parentName:"td",href:"https://www.npmjs.com/package/cordova-plugin-nativestorage"},(0,l.kt)("inlineCode",{parentName:"a"},"cordova-plugin-nativestorage")),". WARNING: The ",(0,l.kt)("inlineCode",{parentName:"td"},"clear()")," method can delete unintended values when using the 'NativeStorage' group."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"CapacitorStorage")),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,l.kt)("h4",{id:"getresult"},"GetResult"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Since"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string ","|"," null")),(0,l.kt)("td",{parentName:"tr",align:null},"The value from preferences associated with the given key. If a value was not previously set or was removed, value will be ",(0,l.kt)("inlineCode",{parentName:"td"},"null"),"."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,l.kt)("h4",{id:"getoptions"},"GetOptions"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Since"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"key"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The key whose value to retrieve from preferences."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,l.kt)("h4",{id:"setoptions"},"SetOptions"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Since"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"key"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The key to associate with the value being set in preferences."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The value to set in preferences with the associated key."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,l.kt)("h4",{id:"removeoptions"},"RemoveOptions"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Since"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"key"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The key whose value to remove from preferences."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,l.kt)("h4",{id:"keysresult"},"KeysResult"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Since"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"keys"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string[]")),(0,l.kt)("td",{parentName:"tr",align:null},"The known keys in preferences."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,l.kt)("h4",{id:"migrateresult"},"MigrateResult"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Since"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"migrated"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string[]")),(0,l.kt)("td",{parentName:"tr",align:null},"An array of keys that were migrated."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"existing"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string[]")),(0,l.kt)("td",{parentName:"tr",align:null},"An array of keys that were already migrated or otherwise exist in preferences that had a value in the Capacitor 2 Preferences plugin."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0"))))))}k.isMDXComponent=!0}}]);