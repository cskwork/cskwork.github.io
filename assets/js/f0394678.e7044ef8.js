"use strict";(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[76332],{3905:function(t,e,n){n.d(e,{Zo:function(){return d},kt:function(){return m}});var a=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,i=function(t,e){if(null==t)return{};var n,a,i={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var s=a.createContext({}),p=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},d=function(t){var e=p(t.components);return a.createElement(s.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(t,e){var n=t.components,i=t.mdxType,r=t.originalType,s=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),c=p(n),m=i,k=c["".concat(s,".").concat(m)]||c[m]||u[m]||r;return n?a.createElement(k,l(l({ref:e},d),{},{components:n})):a.createElement(k,l({ref:e},d))}));function m(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var r=n.length,l=new Array(r);l[0]=c;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o.mdxType="string"==typeof t?t:i,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},83436:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return c}});var a=n(87462),i=n(63366),r=(n(67294),n(3905)),l=["components"],o={title:"Push Notifications Capacitor Plugin API",description:"The Push Notifications API provides access to native push notifications.",editUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/push-notifications/README.md",editApiUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/push-notifications/src/definitions.ts",sidebar_label:"Push Notifications"},s="@capacitor/push-notifications",p={unversionedId:"native/push-notifications",id:"version-v6/native/push-notifications",isDocsHomePage:!1,title:"Push Notifications Capacitor Plugin API",description:"The Push Notifications API provides access to native push notifications.",source:"@site/versioned_docs/version-v6/native/push-notifications.md",sourceDirName:"native",slug:"/native/push-notifications",permalink:"/docs/v6/native/push-notifications",editUrl:"https://github.com/ionic-team/capacitor-plugins/edit/main/push-notifications/README.md",tags:[],version:"v6",frontMatter:{title:"Push Notifications Capacitor Plugin API",description:"The Push Notifications API provides access to native push notifications.",editUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/push-notifications/README.md",editApiUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/push-notifications/src/definitions.ts",sidebar_label:"Push Notifications"},sidebar:"version-v6/native",previous:{title:"Preferences",permalink:"/docs/v6/native/preferences"},next:{title:"Screen Reader",permalink:"/docs/v6/native/screen-reader"}},d=[{value:"Install",id:"install",children:[],level:2},{value:"iOS",id:"ios",children:[],level:2},{value:"Android",id:"android",children:[{value:"Variables",id:"variables",children:[],level:3}],level:2},{value:"Push Notifications icon",id:"push-notifications-icon",children:[],level:2},{value:"Push notifications appearance in foreground",id:"push-notifications-appearance-in-foreground",children:[{value:"Examples",id:"examples",children:[],level:3}],level:2},{value:"Silent Push Notifications / Data-only Notifications",id:"silent-push-notifications--data-only-notifications",children:[{value:"iOS",id:"ios-1",children:[],level:4},{value:"Android",id:"android-1",children:[],level:4}],level:2},{value:"Common Issues",id:"common-issues",children:[],level:2},{value:"Example",id:"example",children:[],level:2},{value:"API",id:"api",children:[{value:"register()",id:"register",children:[],level:3},{value:"getDeliveredNotifications()",id:"getdeliverednotifications",children:[],level:3},{value:"removeDeliveredNotifications(...)",id:"removedeliverednotifications",children:[],level:3},{value:"removeAllDeliveredNotifications()",id:"removealldeliverednotifications",children:[],level:3},{value:"createChannel(...)",id:"createchannel",children:[],level:3},{value:"deleteChannel(...)",id:"deletechannel",children:[],level:3},{value:"listChannels()",id:"listchannels",children:[],level:3},{value:"checkPermissions()",id:"checkpermissions",children:[],level:3},{value:"requestPermissions()",id:"requestpermissions",children:[],level:3},{value:"addListener(&#39;registration&#39;, ...)",id:"addlistenerregistration-",children:[],level:3},{value:"addListener(&#39;registrationError&#39;, ...)",id:"addlistenerregistrationerror-",children:[],level:3},{value:"addListener(&#39;pushNotificationReceived&#39;, ...)",id:"addlistenerpushnotificationreceived-",children:[],level:3},{value:"addListener(&#39;pushNotificationActionPerformed&#39;, ...)",id:"addlistenerpushnotificationactionperformed-",children:[],level:3},{value:"removeAllListeners()",id:"removealllisteners",children:[],level:3},{value:"Interfaces",id:"interfaces",children:[{value:"DeliveredNotifications",id:"deliverednotifications",children:[],level:4},{value:"PushNotificationSchema",id:"pushnotificationschema",children:[],level:4},{value:"Channel",id:"channel",children:[],level:4},{value:"ListChannelsResult",id:"listchannelsresult",children:[],level:4},{value:"PermissionStatus",id:"permissionstatus",children:[],level:4},{value:"PluginListenerHandle",id:"pluginlistenerhandle",children:[],level:4},{value:"Token",id:"token",children:[],level:4},{value:"RegistrationError",id:"registrationerror",children:[],level:4},{value:"ActionPerformed",id:"actionperformed",children:[],level:4}],level:3},{value:"Type Aliases",id:"type-aliases",children:[{value:"Importance",id:"importance",children:[],level:4},{value:"Visibility",id:"visibility",children:[],level:4},{value:"PermissionState",id:"permissionstate",children:[],level:4}],level:3}],level:2}],u={toc:d};function c(t){var e=t.components,n=(0,i.Z)(t,l);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"capacitorpush-notifications"},"@capacitor/push-notifications"),(0,r.kt)("p",null,"The Push Notifications API provides access to native push notifications."),(0,r.kt)("h2",{id:"install"},"Install"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @capacitor/push-notifications\nnpx cap sync\n")),(0,r.kt)("h2",{id:"ios"},"iOS"),(0,r.kt)("p",null,"On iOS you must enable the Push Notifications capability. See ",(0,r.kt)("a",{parentName:"p",href:"https://capacitorjs.com/docs/v3/ios/configuration#setting-capabilities"},"Setting Capabilities")," for instructions on how to enable the capability."),(0,r.kt)("p",null,"After enabling the Push Notifications capability, add the following to your app's ",(0,r.kt)("inlineCode",{parentName:"p"},"AppDelegate.swift"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n  NotificationCenter.default.post(name: .capacitorDidRegisterForRemoteNotifications, object: deviceToken)\n}\n\nfunc application(_ application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: Error) {\n  NotificationCenter.default.post(name: .capacitorDidFailToRegisterForRemoteNotifications, object: error)\n}\n")),(0,r.kt)("h2",{id:"android"},"Android"),(0,r.kt)("p",null,"The Push Notification API uses ",(0,r.kt)("a",{parentName:"p",href:"https://firebase.google.com/docs/cloud-messaging"},"Firebase Cloud Messaging")," SDK for handling notifications.  See ",(0,r.kt)("a",{parentName:"p",href:"https://firebase.google.com/docs/cloud-messaging/android/client"},"Set up a Firebase Cloud Messaging client app on Android")," and follow the instructions for creating a Firebase project and registering your application.  There is no need to add the Firebase SDK to your app or edit your app manifest - the Push Notifications provides that for you.  All that is required is your Firebase project's ",(0,r.kt)("inlineCode",{parentName:"p"},"google-services.json")," file added to the module (app-level) directory of your app."),(0,r.kt)("h3",{id:"variables"},"Variables"),(0,r.kt)("p",null,"This plugin will use the following project variables (defined in your app's ",(0,r.kt)("inlineCode",{parentName:"p"},"variables.gradle")," file):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"$firebaseMessagingVersion")," version of ",(0,r.kt)("inlineCode",{parentName:"li"},"com.google.firebase:firebase-messaging")," (default: ",(0,r.kt)("inlineCode",{parentName:"li"},"23.0.5"),")")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"push-notifications-icon"},"Push Notifications icon"),(0,r.kt)("p",null,"On Android, the Push Notifications icon with the appropriate name should be added to the ",(0,r.kt)("inlineCode",{parentName:"p"},"AndroidManifest.xml")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<meta-data android:name="com.google.firebase.messaging.default_notification_icon" android:resource="@mipmap/push_icon_name" />\n')),(0,r.kt)("p",null,"If no icon is specified Android will use the application icon, but push icon should be white pixels on a transparent backdrop. As the application icon is not usually like that, it will show a white square or circle. So it's recommended to provide the separate icon for Push Notifications."),(0,r.kt)("p",null,"Android Studio has an icon generator you can use to create your Push Notifications icon."),(0,r.kt)("h2",{id:"push-notifications-appearance-in-foreground"},"Push notifications appearance in foreground"),(0,r.kt)("docgen-config",null,(0,r.kt)("p",null,"You can configure the way the push notifications are displayed when the app is in foreground."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Since"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"presentationOptions"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PresentationOption[]")),(0,r.kt)("td",{parentName:"tr",align:null},"This is an array of strings you can combine. Possible values in the array are: - ",(0,r.kt)("inlineCode",{parentName:"td"},"badge"),": badge count on the app icon is updated (default value) - ",(0,r.kt)("inlineCode",{parentName:"td"},"sound"),": the device will ring/vibrate when the push notification is received - ",(0,r.kt)("inlineCode",{parentName:"td"},"alert"),": the push notification is displayed in a native dialog An empty array can be provided if none of the options are desired. badge is only available for iOS."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)("p",null,"In ",(0,r.kt)("inlineCode",{parentName:"p"},"capacitor.config.json"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "plugins": {\n    "PushNotifications": {\n      "presentationOptions": ["badge", "sound", "alert"]\n    }\n  }\n}\n')),(0,r.kt)("p",null,"In ",(0,r.kt)("inlineCode",{parentName:"p"},"capacitor.config.ts"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'/// <reference types="@capacitor/push-notifications" />\n\nimport { CapacitorConfig } from \'@capacitor/cli\';\n\nconst config: CapacitorConfig = {\n  plugins: {\n    PushNotifications: {\n      presentationOptions: ["badge", "sound", "alert"],\n    },\n  },\n};\n\nexport default config;\n'))),(0,r.kt)("h2",{id:"silent-push-notifications--data-only-notifications"},"Silent Push Notifications / Data-only Notifications"),(0,r.kt)("h4",{id:"ios-1"},"iOS"),(0,r.kt)("p",null,"This plugin does not support iOS Silent Push (Remote Notifications). We recommend using native code solutions for handling these types of notifications, see ",(0,r.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/pushing_background_updates_to_your_app"},"Pushing Background Updates to Your App"),"."),(0,r.kt)("h4",{id:"android-1"},"Android"),(0,r.kt)("p",null,"This plugin does support data-only notifications, but will NOT call ",(0,r.kt)("inlineCode",{parentName:"p"},"pushNotificationReceived")," if the app has been killed. To handle this scenario, you will need to create a service that extends ",(0,r.kt)("inlineCode",{parentName:"p"},"FirebaseMessagingService"),", see ",(0,r.kt)("a",{parentName:"p",href:"https://firebase.google.com/docs/cloud-messaging/android/receive"},"Handling FCM Messages"),". "),(0,r.kt)("h2",{id:"common-issues"},"Common Issues"),(0,r.kt)("p",null,"On Android, there are various system and app states that can affect the delivery of push notifications:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If the device has entered ",(0,r.kt)("a",{parentName:"li",href:"https://developer.android.com/training/monitoring-device-state/doze-standby"},"Doze")," mode, your application may have restricted capabilities. To increase the chance of your notification being received, consider using ",(0,r.kt)("a",{parentName:"li",href:"https://firebase.google.com/docs/cloud-messaging/concept-options#setting-the-priority-of-a-message"},"FCM high priority messages"),"."),(0,r.kt)("li",{parentName:"ul"},"There are differences in behavior between development and production. Try testing your app outside of being launched by Android Studio. Read more ",(0,r.kt)("a",{parentName:"li",href:"https://stackoverflow.com/a/50238790/1351469"},"here"),".")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { PushNotifications } from '@capacitor/push-notifications';\n\nconst addListeners = async () => {\n  await PushNotifications.addListener('registration', token => {\n    console.info('Registration token: ', token.value);\n  });\n\n  await PushNotifications.addListener('registrationError', err => {\n    console.error('Registration error: ', err.error);\n  });\n\n  await PushNotifications.addListener('pushNotificationReceived', notification => {\n    console.log('Push notification received: ', notification);\n  });\n\n  await PushNotifications.addListener('pushNotificationActionPerformed', notification => {\n    console.log('Push notification action performed', notification.actionId, notification.inputValue);\n  });\n}\n\nconst registerNotifications = async () => {\n  let permStatus = await PushNotifications.checkPermissions();\n\n  if (permStatus.receive === 'prompt') {\n    permStatus = await PushNotifications.requestPermissions();\n  }\n\n  if (permStatus.receive !== 'granted') {\n    throw new Error('User denied permissions!');\n  }\n\n  await PushNotifications.register();\n}\n\nconst getDeliveredNotifications = async () => {\n  const notificationList = await PushNotifications.getDeliveredNotifications();\n  console.log('delivered notifications', notificationList);\n}\n")),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("docgen-index",null,(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#register"},(0,r.kt)("inlineCode",{parentName:"a"},"register()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#getdeliverednotifications"},(0,r.kt)("inlineCode",{parentName:"a"},"getDeliveredNotifications()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#removedeliverednotifications"},(0,r.kt)("inlineCode",{parentName:"a"},"removeDeliveredNotifications(...)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#removealldeliverednotifications"},(0,r.kt)("inlineCode",{parentName:"a"},"removeAllDeliveredNotifications()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#createchannel"},(0,r.kt)("inlineCode",{parentName:"a"},"createChannel(...)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#deletechannel"},(0,r.kt)("inlineCode",{parentName:"a"},"deleteChannel(...)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#listchannels"},(0,r.kt)("inlineCode",{parentName:"a"},"listChannels()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#checkpermissions"},(0,r.kt)("inlineCode",{parentName:"a"},"checkPermissions()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#requestpermissions"},(0,r.kt)("inlineCode",{parentName:"a"},"requestPermissions()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#addlistenerregistration"},(0,r.kt)("inlineCode",{parentName:"a"},"addListener('registration', ...)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#addlistenerregistrationerror"},(0,r.kt)("inlineCode",{parentName:"a"},"addListener('registrationError', ...)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#addlistenerpushnotificationreceived"},(0,r.kt)("inlineCode",{parentName:"a"},"addListener('pushNotificationReceived', ...)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#addlistenerpushnotificationactionperformed"},(0,r.kt)("inlineCode",{parentName:"a"},"addListener('pushNotificationActionPerformed', ...)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#removealllisteners"},(0,r.kt)("inlineCode",{parentName:"a"},"removeAllListeners()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#interfaces"},"Interfaces")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#type-aliases"},"Type Aliases")))),(0,r.kt)("docgen-api",null,(0,r.kt)("h3",{id:"register"},"register()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"register() => Promise<void>\n")),(0,r.kt)("p",null,"Register the app to receive push notifications."),(0,r.kt)("p",null,"This method will trigger the ",(0,r.kt)("inlineCode",{parentName:"p"},"'registration'")," event with the push token or\n",(0,r.kt)("inlineCode",{parentName:"p"},"'registrationError'")," if there was a problem. It does not prompt the user for\nnotification permissions, use ",(0,r.kt)("inlineCode",{parentName:"p"},"requestPermissions()")," first."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getdeliverednotifications"},"getDeliveredNotifications()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"getDeliveredNotifications() => Promise<DeliveredNotifications>\n")),(0,r.kt)("p",null,"Get a list of notifications that are visible on the notifications screen."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ",(0,r.kt)("code",null,"Promise","<",(0,r.kt)("a",{href:"#deliverednotifications"},"DeliveredNotifications"),">")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"removedeliverednotifications"},"removeDeliveredNotifications(...)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"removeDeliveredNotifications(delivered: DeliveredNotifications) => Promise<void>\n")),(0,r.kt)("p",null,"Remove the specified notifications from the notifications screen."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"delivered"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,(0,r.kt)("a",{href:"#deliverednotifications"},"DeliveredNotifications")))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"removealldeliverednotifications"},"removeAllDeliveredNotifications()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"removeAllDeliveredNotifications() => Promise<void>\n")),(0,r.kt)("p",null,"Remove all the notifications from the notifications screen."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"createchannel"},"createChannel(...)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"createChannel(channel: Channel) => Promise<void>\n")),(0,r.kt)("p",null,"Create a notification channel."),(0,r.kt)("p",null,"Only available on Android O or newer (SDK 26+)."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"channel"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,(0,r.kt)("a",{href:"#channel"},"Channel")))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"deletechannel"},"deleteChannel(...)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"deleteChannel(args: { id: string; }) => Promise<void>\n")),(0,r.kt)("p",null,"Delete a notification channel."),(0,r.kt)("p",null,"Only available on Android O or newer (SDK 26+)."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"args"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"{ id: string; }"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"listchannels"},"listChannels()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"listChannels() => Promise<ListChannelsResult>\n")),(0,r.kt)("p",null,"List the available notification channels."),(0,r.kt)("p",null,"Only available on Android O or newer (SDK 26+)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ",(0,r.kt)("code",null,"Promise","<",(0,r.kt)("a",{href:"#listchannelsresult"},"ListChannelsResult"),">")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"checkpermissions"},"checkPermissions()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"checkPermissions() => Promise<PermissionStatus>\n")),(0,r.kt)("p",null,"Check permission to receive push notifications."),(0,r.kt)("p",null,"On Android the status is always granted because you can always\nreceive push notifications. If you need to check if the user allows\nto display notifications, use local-notifications plugin."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ",(0,r.kt)("code",null,"Promise","<",(0,r.kt)("a",{href:"#permissionstatus"},"PermissionStatus"),">")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"requestpermissions"},"requestPermissions()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"requestPermissions() => Promise<PermissionStatus>\n")),(0,r.kt)("p",null,"Request permission to receive push notifications."),(0,r.kt)("p",null,"On Android it doesn't prompt for permission because you can always\nreceive push notifications."),(0,r.kt)("p",null,"On iOS, the first time you use the function, it will prompt the user\nfor push notification permission and return granted or denied based\non the user selection. On following calls it will get the current status of\nthe permission without prompting again."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ",(0,r.kt)("code",null,"Promise","<",(0,r.kt)("a",{href:"#permissionstatus"},"PermissionStatus"),">")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"addlistenerregistration-"},"addListener('registration', ...)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"addListener(eventName: 'registration', listenerFunc: (token: Token) => void) => Promise<PluginListenerHandle> & PluginListenerHandle\n")),(0,r.kt)("p",null,"Called when the push notification registration finishes without problems."),(0,r.kt)("p",null,"Provides the push notification token."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"eventName"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"'registration'"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"listenerFunc"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"(token: ",(0,r.kt)("a",{href:"#token"},"Token"),") =",">"," void"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ",(0,r.kt)("code",null,"Promise","<",(0,r.kt)("a",{href:"#pluginlistenerhandle"},"PluginListenerHandle"),">"," & ",(0,r.kt)("a",{href:"#pluginlistenerhandle"},"PluginListenerHandle"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"addlistenerregistrationerror-"},"addListener('registrationError', ...)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"addListener(eventName: 'registrationError', listenerFunc: (error: RegistrationError) => void) => Promise<PluginListenerHandle> & PluginListenerHandle\n")),(0,r.kt)("p",null,"Called when the push notification registration finished with problems."),(0,r.kt)("p",null,"Provides an error with the registration problem."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"eventName"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"'registrationError'"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"listenerFunc"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"(error: ",(0,r.kt)("a",{href:"#registrationerror"},"RegistrationError"),") =",">"," void"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ",(0,r.kt)("code",null,"Promise","<",(0,r.kt)("a",{href:"#pluginlistenerhandle"},"PluginListenerHandle"),">"," & ",(0,r.kt)("a",{href:"#pluginlistenerhandle"},"PluginListenerHandle"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"addlistenerpushnotificationreceived-"},"addListener('pushNotificationReceived', ...)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"addListener(eventName: 'pushNotificationReceived', listenerFunc: (notification: PushNotificationSchema) => void) => Promise<PluginListenerHandle> & PluginListenerHandle\n")),(0,r.kt)("p",null,"Called when the device receives a push notification."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"eventName"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"'pushNotificationReceived'"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"listenerFunc"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"(notification: ",(0,r.kt)("a",{href:"#pushnotificationschema"},"PushNotificationSchema"),") =",">"," void"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ",(0,r.kt)("code",null,"Promise","<",(0,r.kt)("a",{href:"#pluginlistenerhandle"},"PluginListenerHandle"),">"," & ",(0,r.kt)("a",{href:"#pluginlistenerhandle"},"PluginListenerHandle"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"addlistenerpushnotificationactionperformed-"},"addListener('pushNotificationActionPerformed', ...)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"addListener(eventName: 'pushNotificationActionPerformed', listenerFunc: (notification: ActionPerformed) => void) => Promise<PluginListenerHandle> & PluginListenerHandle\n")),(0,r.kt)("p",null,"Called when an action is performed on a push notification."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"eventName"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"'pushNotificationActionPerformed'"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"listenerFunc"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"(notification: ",(0,r.kt)("a",{href:"#actionperformed"},"ActionPerformed"),") =",">"," void"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ",(0,r.kt)("code",null,"Promise","<",(0,r.kt)("a",{href:"#pluginlistenerhandle"},"PluginListenerHandle"),">"," & ",(0,r.kt)("a",{href:"#pluginlistenerhandle"},"PluginListenerHandle"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"removealllisteners"},"removeAllListeners()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"removeAllListeners() => Promise<void>\n")),(0,r.kt)("p",null,"Remove all native listeners for this plugin."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"interfaces"},"Interfaces"),(0,r.kt)("h4",{id:"deliverednotifications"},"DeliveredNotifications"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Since"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"notifications"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PushNotificationSchema[]")),(0,r.kt)("td",{parentName:"tr",align:null},"List of notifications that are visible on the notifications screen."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,r.kt)("h4",{id:"pushnotificationschema"},"PushNotificationSchema"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Since"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"title"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The notification title."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"subtitle"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The notification subtitle."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"body"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The main text payload for the notification."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"id"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The notification identifier."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"tag"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The notification tag. Only available on Android (from push notifications)."),(0,r.kt)("td",{parentName:"tr",align:null},"4.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"badge"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The number to display for the app icon badge."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"notification"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"any")),(0,r.kt)("td",{parentName:"tr",align:null},"It's not being returned."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"data"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"any")),(0,r.kt)("td",{parentName:"tr",align:null},"Any additional data that was included in the push notification payload."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"click_action"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The action to be performed on the user opening the notification. Only available on Android."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"link"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Deep link from the notification. Only available on Android."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"group"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Set the group identifier for notification grouping. Only available on Android. Works like ",(0,r.kt)("inlineCode",{parentName:"td"},"threadIdentifier")," on iOS."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"groupSummary"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Designate this notification as the summary for an associated ",(0,r.kt)("inlineCode",{parentName:"td"},"group"),". Only available on Android."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,r.kt)("h4",{id:"channel"},"Channel"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Since"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"id"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The channel identifier."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"name"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The human-friendly name of this channel (presented to the user)."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"description"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The description of this channel (presented to the user)."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"sound"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The sound that should be played for notifications posted to this channel. Notification channels with an importance of at least ",(0,r.kt)("inlineCode",{parentName:"td"},"3")," should have a sound. The file name of a sound file should be specified relative to the android app ",(0,r.kt)("inlineCode",{parentName:"td"},"res/raw")," directory."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"importance"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,(0,r.kt)("a",{href:"#importance"},"Importance"))),(0,r.kt)("td",{parentName:"tr",align:null},"The level of interruption for notifications posted to this channel."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,(0,r.kt)("inlineCode",{parentName:"td"},"3"))),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"visibility"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,(0,r.kt)("a",{href:"#visibility"},"Visibility"))),(0,r.kt)("td",{parentName:"tr",align:null},"The visibility of notifications posted to this channel. This setting is for whether notifications posted to this channel appear on the lockscreen or not, and if so, whether they appear in a redacted form."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"lights"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether notifications posted to this channel should display notification lights, on devices that support it."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"lightColor"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The light color for notifications posted to this channel. Only supported if lights are enabled on this channel and the device supports it. Supported color formats are ",(0,r.kt)("inlineCode",{parentName:"td"},"#RRGGBB")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"#RRGGBBAA"),"."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"vibration"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether notifications posted to this channel should vibrate."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,r.kt)("h4",{id:"listchannelsresult"},"ListChannelsResult"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Since"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"channels"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Channel[]")),(0,r.kt)("td",{parentName:"tr",align:null},"List of all the Channels created by your app."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,r.kt)("h4",{id:"permissionstatus"},"PermissionStatus"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Since"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"receive"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,(0,r.kt)("a",{href:"#permissionstate"},"PermissionState"))),(0,r.kt)("td",{parentName:"tr",align:null},"Permission state of receiving notifications."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,r.kt)("h4",{id:"pluginlistenerhandle"},"PluginListenerHandle"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"remove"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"() =",">"," Promise","<","void",">"))))),(0,r.kt)("h4",{id:"token"},"Token"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Since"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"value"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"On iOS it contains the APNS token. On Android it contains the FCM token."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,r.kt)("h4",{id:"registrationerror"},"RegistrationError"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Since"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"error"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Error message describing the registration failure."),(0,r.kt)("td",{parentName:"tr",align:null},"4.0.0")))),(0,r.kt)("h4",{id:"actionperformed"},"ActionPerformed"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Since"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"actionId"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The action performed on the notification."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"inputValue"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Text entered on the notification action. Only available on iOS."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"notification"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,(0,r.kt)("a",{href:"#pushnotificationschema"},"PushNotificationSchema"))),(0,r.kt)("td",{parentName:"tr",align:null},"The notification in which the action was performed."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,r.kt)("h3",{id:"type-aliases"},"Type Aliases"),(0,r.kt)("h4",{id:"importance"},"Importance"),(0,r.kt)("p",null,"The importance level. For more details, see the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/android/app/NotificationManager#IMPORTANCE_DEFAULT"},"Android Developer Docs")),(0,r.kt)("code",null,"1 | 2 | 3 | 4 | 5"),(0,r.kt)("h4",{id:"visibility"},"Visibility"),(0,r.kt)("p",null,"The notification visibility. For more details, see the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/androidx/core/app/NotificationCompat#VISIBILITY_PRIVATE"},"Android Developer Docs")),(0,r.kt)("code",null,"-1 | 0 | 1"),(0,r.kt)("h4",{id:"permissionstate"},"PermissionState"),(0,r.kt)("code",null,"'prompt' | 'prompt-with-rationale' | 'granted' | 'denied'")))}c.isMDXComponent=!0}}]);