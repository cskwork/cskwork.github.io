"use strict";(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[4216],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(a),k=r,m=d["".concat(o,".").concat(k)]||d[k]||u[k]||l;return a?n.createElement(m,i(i({ref:t},c),{},{components:a})):n.createElement(m,i({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=k;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},94996:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>o});var n=a(87462),r=(a(67294),a(3905));const l={title:"Screen Reader Capacitor Plugin API",description:"The Screen Reader API provides access to TalkBack/VoiceOver/etc. and provides simple text-to-speech capabilities for visual accessibility.",editUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/screen-reader/README.md",editApiUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/screen-reader/src/definitions.ts",sidebar_label:"Screen Reader"},i="@capacitor/screen-reader",s={unversionedId:"native/screen-reader",id:"version-v6/native/screen-reader",isDocsHomePage:!1,title:"Screen Reader Capacitor Plugin API",description:"The Screen Reader API provides access to TalkBack/VoiceOver/etc. and provides simple text-to-speech capabilities for visual accessibility.",source:"@site/versioned_docs/version-v6/native/screen-reader.md",sourceDirName:"native",slug:"/native/screen-reader",permalink:"/docs/v6/native/screen-reader",editUrl:"https://github.com/ionic-team/capacitor-plugins/edit/main/screen-reader/README.md",tags:[],version:"v6",frontMatter:{title:"Screen Reader Capacitor Plugin API",description:"The Screen Reader API provides access to TalkBack/VoiceOver/etc. and provides simple text-to-speech capabilities for visual accessibility.",editUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/screen-reader/README.md",editApiUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/screen-reader/src/definitions.ts",sidebar_label:"Screen Reader"},sidebar:"version-v6/native",previous:{title:"Push Notifications",permalink:"/docs/v6/native/push-notifications"},next:{title:"Share",permalink:"/docs/v6/native/share"}},o=[{value:"Install",id:"install",children:[],level:2},{value:"Example",id:"example",children:[],level:2},{value:"API",id:"api",children:[{value:"isEnabled()",id:"isenabled",children:[],level:3},{value:"speak(...)",id:"speak",children:[],level:3},{value:"addListener(&#39;stateChange&#39;, ...)",id:"addlistenerstatechange-",children:[],level:3},{value:"removeAllListeners()",id:"removealllisteners",children:[],level:3},{value:"Interfaces",id:"interfaces",children:[{value:"SpeakOptions",id:"speakoptions",children:[],level:4},{value:"PluginListenerHandle",id:"pluginlistenerhandle",children:[],level:4},{value:"ScreenReaderState",id:"screenreaderstate",children:[],level:4}],level:3},{value:"Type Aliases",id:"type-aliases",children:[{value:"StateChangeListener",id:"statechangelistener",children:[],level:4}],level:3}],level:2}],p={toc:o},c="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"capacitorscreen-reader"},"@capacitor/screen-reader"),(0,r.kt)("p",null,"The Screen Reader API provides access to TalkBack/VoiceOver/etc. and provides simple text-to-speech capabilities for visual accessibility."),(0,r.kt)("h2",{id:"install"},"Install"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @capacitor/screen-reader\nnpx cap sync\n")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ScreenReader } from '@capacitor/screen-reader';\n\nScreenReader.addListener('screenReaderStateChange', ({ value }) => {\n  console.log(`Screen reader is now ${value ? 'on' : 'off'}`);\n});\n\nconst checkScreenReaderEnabled = async () => {\n  const { value } = await ScreenReader.isEnabled();\n\n  console.log('Voice over enabled? ' + value);\n};\n\nconst sayHello = async () => {\n  await ScreenReader.speak({ value: 'Hello World!' });\n};\n")),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("docgen-index",null,(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#isenabled"},(0,r.kt)("inlineCode",{parentName:"a"},"isEnabled()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#speak"},(0,r.kt)("inlineCode",{parentName:"a"},"speak(...)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#addlistenerstatechange"},(0,r.kt)("inlineCode",{parentName:"a"},"addListener('stateChange', ...)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#removealllisteners"},(0,r.kt)("inlineCode",{parentName:"a"},"removeAllListeners()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#interfaces"},"Interfaces")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#type-aliases"},"Type Aliases")))),(0,r.kt)("docgen-api",null,(0,r.kt)("h3",{id:"isenabled"},"isEnabled()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"isEnabled() => Promise<{ value: boolean; }>\n")),(0,r.kt)("p",null,"Whether a Screen Reader is currently active."),(0,r.kt)("p",null,"This method is not supported on web (it is not possible to detect Screen\nReaders)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ",(0,r.kt)("code",null,"Promise","<","{ value: boolean; }",">")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"speak"},"speak(...)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"speak(options: SpeakOptions) => Promise<void>\n")),(0,r.kt)("p",null,"Text-to-Speech functionality."),(0,r.kt)("p",null,"This function will only work if a Screen Reader is currently active."),(0,r.kt)("p",null,"On web, browsers must support the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis"},"SpeechSynthesis\nAPI"),", or\nthis method will throw an error."),(0,r.kt)("p",null,"For more text-to-speech capabilities, please see the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/capacitor-community/text-to-speech"},"Capacitor Community\nText-to-Speech\nplugin"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"options"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,(0,r.kt)("a",{href:"#speakoptions"},"SpeakOptions")))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"addlistenerstatechange-"},"addListener('stateChange', ...)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"addListener(eventName: 'stateChange', listener: StateChangeListener) => Promise<PluginListenerHandle> & PluginListenerHandle\n")),(0,r.kt)("p",null,"Add a listener for when the screen reader is turned on or off."),(0,r.kt)("p",null,"This event used to be named ",(0,r.kt)("inlineCode",{parentName:"p"},"'accessibilityScreenReaderStateChange'"),"."),(0,r.kt)("p",null,"This method is not supported on web (it is not possible to detect Screen\nReaders)."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"eventName"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"'stateChange'"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"listener"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,(0,r.kt)("a",{href:"#statechangelistener"},"StateChangeListener")))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ",(0,r.kt)("code",null,"Promise","<",(0,r.kt)("a",{href:"#pluginlistenerhandle"},"PluginListenerHandle"),">"," & ",(0,r.kt)("a",{href:"#pluginlistenerhandle"},"PluginListenerHandle"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"removealllisteners"},"removeAllListeners()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"removeAllListeners() => Promise<void>\n")),(0,r.kt)("p",null,"Remove all the listeners that are attached to this plugin."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"interfaces"},"Interfaces"),(0,r.kt)("h4",{id:"speakoptions"},"SpeakOptions"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Since"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"value"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The text to speak."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"language"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The language to speak the text in, as its ",(0,r.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes"},"ISO 639-1 Code"),' (e.g.: "en"). This option is only supported on Android.'),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,r.kt)("h4",{id:"pluginlistenerhandle"},"PluginListenerHandle"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"remove"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"() =",">"," Promise","<","void",">"))))),(0,r.kt)("h4",{id:"screenreaderstate"},"ScreenReaderState"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Since"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"value"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether a Screen Reader is currently active."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,r.kt)("h3",{id:"type-aliases"},"Type Aliases"),(0,r.kt)("h4",{id:"statechangelistener"},"StateChangeListener"),(0,r.kt)("code",null,"(state: ",(0,r.kt)("a",{href:"#screenreaderstate"},"ScreenReaderState"),"): void")))}d.isMDXComponent=!0}}]);