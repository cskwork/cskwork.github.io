"use strict";(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[72274],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),d=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=d(n),u=r,k=p["".concat(c,".").concat(u)]||p[u]||m[u]||l;return n?a.createElement(k,i(i({ref:t},s),{},{components:n})):a.createElement(k,i({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},37942:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const l={title:"Motion Capacitor Plugin API",description:"The Motion API tracks accelerometer and device orientation (compass heading, etc.)",editUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/motion/README.md",editApiUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/motion/src/definitions.ts",sidebar_label:"Motion"},i="@capacitor/motion",o={unversionedId:"native/motion",id:"version-v6/native/motion",isDocsHomePage:!1,title:"Motion Capacitor Plugin API",description:"The Motion API tracks accelerometer and device orientation (compass heading, etc.)",source:"@site/versioned_docs/version-v6/native/motion.md",sourceDirName:"native",slug:"/native/motion",permalink:"/docs/v6/native/motion",editUrl:"https://github.com/ionic-team/capacitor-plugins/edit/main/motion/README.md",tags:[],version:"v6",frontMatter:{title:"Motion Capacitor Plugin API",description:"The Motion API tracks accelerometer and device orientation (compass heading, etc.)",editUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/motion/README.md",editApiUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/motion/src/definitions.ts",sidebar_label:"Motion"},sidebar:"version-v6/native",previous:{title:"Local Notifications",permalink:"/docs/v6/native/local-notifications"},next:{title:"Network",permalink:"/docs/v6/native/network"}},c=[{value:"Install",id:"install",children:[],level:2},{value:"Permissions",id:"permissions",children:[],level:2},{value:"API",id:"api",children:[{value:"addListener(&#39;accel&#39;, ...)",id:"addlisteneraccel-",children:[],level:3},{value:"addListener(&#39;orientation&#39;, ...)",id:"addlistenerorientation-",children:[],level:3},{value:"removeAllListeners()",id:"removealllisteners",children:[],level:3},{value:"Interfaces",id:"interfaces",children:[{value:"PluginListenerHandle",id:"pluginlistenerhandle",children:[],level:4},{value:"AccelListenerEvent",id:"accellistenerevent",children:[],level:4},{value:"Acceleration",id:"acceleration",children:[],level:4},{value:"RotationRate",id:"rotationrate",children:[],level:4}],level:3},{value:"Type Aliases",id:"type-aliases",children:[{value:"AccelListener",id:"accellistener",children:[],level:4},{value:"OrientationListener",id:"orientationlistener",children:[],level:4},{value:"OrientationListenerEvent",id:"orientationlistenerevent",children:[],level:4}],level:3}],level:2}],d={toc:c},s="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"capacitormotion"},"@capacitor/motion"),(0,r.kt)("p",null,"The Motion API tracks accelerometer and device orientation (compass heading, etc.)"),(0,r.kt)("h2",{id:"install"},"Install"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @capacitor/motion\nnpx cap sync\n")),(0,r.kt)("h2",{id:"permissions"},"Permissions"),(0,r.kt)("p",null,"This plugin is currently implemented using Web APIs. Most browsers require\npermission before using this API. To request permission, prompt the user for\npermission on any user-initiated action (such as a button click):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { PluginListenerHandle } from '@capacitor/core';\nimport { Motion } from '@capacitor/motion';\n\n\nlet accelHandler: PluginListenerHandle;\n\nmyButton.addEventListener('click', async () => {\n  try {\n    await DeviceMotionEvent.requestPermission();\n  } catch (e) {\n    // Handle error\n    return;\n  }\n\n  // Once the user approves, can start listening:\n  accelHandler = await Motion.addListener('accel', event => {\n    console.log('Device motion event:', event);\n  });\n});\n\n// Stop the acceleration listener\nconst stopAcceleration = () => {\n  if (accelHandler) {\n    accelHandler.remove();\n  }\n};\n\n// Remove all listeners\nconst removeListeners = () => {\n  Motion.removeAllListeners();\n};\n")),(0,r.kt)("p",null,"See the\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/DeviceMotionEvent"},(0,r.kt)("inlineCode",{parentName:"a"},"DeviceMotionEvent")),"\nAPI to understand the data supplied in the 'accel' event."),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("docgen-index",null,(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#addlisteneraccel"},(0,r.kt)("inlineCode",{parentName:"a"},"addListener('accel', ...)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#addlistenerorientation"},(0,r.kt)("inlineCode",{parentName:"a"},"addListener('orientation', ...)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#removealllisteners"},(0,r.kt)("inlineCode",{parentName:"a"},"removeAllListeners()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#interfaces"},"Interfaces")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#type-aliases"},"Type Aliases")))),(0,r.kt)("docgen-api",null,(0,r.kt)("h3",{id:"addlisteneraccel-"},"addListener('accel', ...)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"addListener(eventName: 'accel', listenerFunc: AccelListener) => Promise<PluginListenerHandle> & PluginListenerHandle\n")),(0,r.kt)("p",null,"Add a listener for accelerometer data"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"eventName"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"'accel'"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"listenerFunc"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,(0,r.kt)("a",{href:"#accellistener"},"AccelListener")))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ",(0,r.kt)("code",null,"Promise","<",(0,r.kt)("a",{href:"#pluginlistenerhandle"},"PluginListenerHandle"),">"," & ",(0,r.kt)("a",{href:"#pluginlistenerhandle"},"PluginListenerHandle"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"addlistenerorientation-"},"addListener('orientation', ...)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"addListener(eventName: 'orientation', listenerFunc: OrientationListener) => Promise<PluginListenerHandle> & PluginListenerHandle\n")),(0,r.kt)("p",null,"Add a listener for device orientation change (compass heading, etc.)"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"eventName"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"'orientation'"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"listenerFunc"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,(0,r.kt)("a",{href:"#orientationlistener"},"OrientationListener")))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")," ",(0,r.kt)("code",null,"Promise","<",(0,r.kt)("a",{href:"#pluginlistenerhandle"},"PluginListenerHandle"),">"," & ",(0,r.kt)("a",{href:"#pluginlistenerhandle"},"PluginListenerHandle"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"removealllisteners"},"removeAllListeners()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"removeAllListeners() => Promise<void>\n")),(0,r.kt)("p",null,"Remove all the listeners that are attached to this plugin."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"interfaces"},"Interfaces"),(0,r.kt)("h4",{id:"pluginlistenerhandle"},"PluginListenerHandle"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"remove"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"() =",">"," Promise","<","void",">"))))),(0,r.kt)("h4",{id:"accellistenerevent"},"AccelListenerEvent"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Since"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"acceleration"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,(0,r.kt)("a",{href:"#acceleration"},"Acceleration"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object giving the acceleration of the device on the three axis X, Y and Z. ",(0,r.kt)("a",{href:"#acceleration"},"Acceleration")," is expressed in m/s"),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"accelerationIncludingGravity"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,(0,r.kt)("a",{href:"#acceleration"},"Acceleration"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object giving the acceleration of the device on the three axis X, Y and Z with the effect of gravity. ",(0,r.kt)("a",{href:"#acceleration"},"Acceleration")," is expressed in m/s"),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"rotationRate"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,(0,r.kt)("a",{href:"#rotationrate"},"RotationRate"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object giving the rate of change of the device's orientation on the three orientation axis alpha, beta and gamma. Rotation rate is expressed in degrees per seconds."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"interval"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"A number representing the interval of time, in milliseconds, at which data is obtained from the device."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,r.kt)("h4",{id:"acceleration"},"Acceleration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Since"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"x"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of acceleration along the X axis."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"y"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of acceleration along the Y axis."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"z"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of acceleration along the Z axis."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,r.kt)("h4",{id:"rotationrate"},"RotationRate"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Since"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"alpha"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of rotation around the Z axis, in degrees per second."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"beta"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of rotation around the X axis, in degrees per second."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"gamma"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of rotation around the Y axis, in degrees per second."),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,r.kt)("h3",{id:"type-aliases"},"Type Aliases"),(0,r.kt)("h4",{id:"accellistener"},"AccelListener"),(0,r.kt)("code",null,"(event: ",(0,r.kt)("a",{href:"#accellistenerevent"},"AccelListenerEvent"),"): void"),(0,r.kt)("h4",{id:"orientationlistener"},"OrientationListener"),(0,r.kt)("code",null,"(event: ",(0,r.kt)("a",{href:"#rotationrate"},"RotationRate"),"): void"),(0,r.kt)("h4",{id:"orientationlistenerevent"},"OrientationListenerEvent"),(0,r.kt)("code",null,(0,r.kt)("a",{href:"#rotationrate"},"RotationRate"))))}p.isMDXComponent=!0}}]);