"use strict";(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[43449],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var o=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=o.createContext({}),p=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=p(e.components);return o.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(t),d=i,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||r;return t?o.createElement(f,a(a({ref:n},s),{},{components:t})):o.createElement(f,a({ref:n},s))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,a=new Array(r);a[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var p=2;p<r;p++)a[p]=t[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},70986:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return s},default:function(){return m}});var o=t(87462),i=t(63366),r=(t(67294),t(3905)),a=["components"],l={title:"ionic config get",sidebar_label:"config get"},c=void 0,p={unversionedId:"cli/commands/config-get",id:"version-v6/cli/commands/config-get",isDocsHomePage:!1,title:"ionic config get",description:"Print config values",source:"@site/versioned_docs/version-v6/cli/commands/config-get.md",sourceDirName:"cli/commands",slug:"/cli/commands/config-get",permalink:"/docs/v6/cli/commands/config-get",editUrl:"https://github.com/ionic-team/ionic-cli/edit/develop/packages/@ionic/cli/src/commands/config/get.ts",tags:[],version:"v6",frontMatter:{title:"ionic config get",sidebar_label:"config get"},sidebar:"version-v6/cli",previous:{title:"completion",permalink:"/docs/v6/cli/commands/completion"},next:{title:"config set",permalink:"/docs/v6/cli/commands/config-set"}},s=[{value:"property",id:"property",children:[],level:3},{value:"Options",id:"options",children:[],level:3},{value:"Advanced Options",id:"advanced-options",children:[],level:3},{value:"Examples",id:"examples",children:[],level:2}],u={toc:s};function m(e){var n=e.components,t=(0,i.Z)(e,a);return(0,r.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Print config values"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ ionic config get [property] [options]\n")),(0,r.kt)("p",null,"This command reads and prints configuration values from the project's ",(0,r.kt)("strong",{parentName:"p"},"./ionic.config.json")," file. It can also operate on the global CLI configuration (",(0,r.kt)("strong",{parentName:"p"},"~/.ionic/config.json"),") using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--global")," option."),(0,r.kt)("p",null,"For nested properties, separate nest levels with dots. For example, the property name ",(0,r.kt)("inlineCode",{parentName:"p"},"integrations.cordova")," will look in the ",(0,r.kt)("strong",{parentName:"p"},"integrations")," object for the ",(0,r.kt)("strong",{parentName:"p"},"cordova")," property."),(0,r.kt)("p",null,"Without a ",(0,r.kt)("inlineCode",{parentName:"p"},"property")," argument, this command prints out the entire config."),(0,r.kt)("p",null,"For multi-app projects, this command is scoped to the current project by default. To operate at the root of the project configuration file instead, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"--root")," option."),(0,r.kt)("p",null,"If you are using this command programmatically, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"--json")," option."),(0,r.kt)("p",null,"This command will sanitize config output for known sensitive fields (disabled when using ",(0,r.kt)("inlineCode",{parentName:"p"},"--json"),")."),(0,r.kt)("h3",{id:"property"},"property"),(0,r.kt)("p",null,"The property name you wish to get"),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--global"),": Use global CLI config (or ",(0,r.kt)("inlineCode",{parentName:"li"},"-g"),")\n")),(0,r.kt)("h3",{id:"advanced-options"},"Advanced Options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--json"),": Output config values in JSON\n"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--root"),": Operate on root of ",(0,r.kt)("strong",{parentName:"li"},"./ionic.config.json"))),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ ionic config get \n$ ionic config get id\n$ ionic config get --global user.email\n$ ionic config get -g npmClient\n")))}m.isMDXComponent=!0}}]);