"use strict";(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[21089],{3905:function(e,n,o){o.d(n,{Zo:function(){return u},kt:function(){return m}});var i=o(67294);function r(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function t(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,i)}return o}function a(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?t(Object(o),!0).forEach((function(n){r(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):t(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function l(e,n){if(null==e)return{};var o,i,r=function(e,n){if(null==e)return{};var o,i,r={},t=Object.keys(e);for(i=0;i<t.length;i++)o=t[i],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(i=0;i<t.length;i++)o=t[i],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var d=i.createContext({}),c=function(e){var n=i.useContext(d),o=n;return e&&(o="function"==typeof e?e(n):a(a({},n),e)),o},u=function(e){var n=c(e.components);return i.createElement(d.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var o=e.components,r=e.mdxType,t=e.originalType,d=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(o),m=r,f=p["".concat(d,".").concat(m)]||p[m]||s[m]||t;return o?i.createElement(f,a(a({ref:n},u),{},{components:o})):i.createElement(f,a({ref:n},u))}));function m(e,n){var o=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var t=o.length,a=new Array(t);a[0]=p;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var c=2;c<t;c++)a[c]=o[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,o)}p.displayName="MDXCreateElement"},50787:function(e,n,o){o.r(n),o.d(n,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var i=o(87462),r=o(63366),t=(o(67294),o(3905)),a=["components"],l={title:"ionic cordova build",sidebar_label:"cordova build"},d=void 0,c={unversionedId:"cli/commands/cordova-build",id:"version-v6/cli/commands/cordova-build",isDocsHomePage:!1,title:"ionic cordova build",description:"Ionic Cordova Build for Android and iOS Platform Builds",source:"@site/versioned_docs/version-v6/cli/commands/cordova-build.md",sourceDirName:"cli/commands",slug:"/cli/commands/cordova-build",permalink:"/docs/v6/cli/commands/cordova-build",editUrl:"https://github.com/ionic-team/ionic-cli/edit/develop/packages/@ionic/cli/src/commands/cordova/build.ts",tags:[],version:"v6",frontMatter:{title:"ionic cordova build",sidebar_label:"cordova build"},sidebar:"version-v6/cli",previous:{title:"config unset",permalink:"/docs/v6/cli/commands/config-unset"},next:{title:"cordova compile",permalink:"/docs/v6/cli/commands/cordova-compile"}},u=[{value:"platform",id:"platform",children:[],level:3},{value:"Options",id:"options",children:[],level:3},{value:"Advanced Options",id:"advanced-options",children:[],level:3},{value:"Examples",id:"examples",children:[],level:2}],s={toc:u};function p(e){var n=e.components,o=(0,r.Z)(e,a);return(0,t.kt)("wrapper",(0,i.Z)({},s,o,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("head",null,(0,t.kt)("title",null,"Ionic Cordova Build for Android and iOS Platform Builds"),(0,t.kt)("meta",{name:"description",content:"Like running Cordova Build directly, Ionic Cordova Build also builds web assets from Ionic Build and provides friendly checks for Android and iOS platforms."})),(0,t.kt)("p",null,"Use Cordova to build for Android and iOS platform targets"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},"$ ionic cordova build [platform] [options]\n")),(0,t.kt)("p",null,"Like running ",(0,t.kt)("inlineCode",{parentName:"p"},"cordova build")," directly, ",(0,t.kt)("inlineCode",{parentName:"p"},"ionic cordova build")," also builds web assets from ",(0,t.kt)("inlineCode",{parentName:"p"},"ionic build")," and provides friendly checks for Android and iOS platforms."),(0,t.kt)("p",null,"To pass additional options to the Cordova CLI, use the ",(0,t.kt)("inlineCode",{parentName:"p"},"--")," separator after the Ionic CLI arguments."),(0,t.kt)("p",null,"The Cordova CLI requires a separator for platform-specific arguments for Android ",(0,t.kt)("a",{parentName:"p",href:"https://cordova.apache.org/docs/en/latest/guide/platforms/android/index.html#using-flags"},"builds"),", so an additional separator is required for the Ionic CLI, but it is not required for iOS ",(0,t.kt)("a",{parentName:"p",href:"https://cordova.apache.org/docs/en/latest/guide/platforms/ios/index.html#using-flags"},"builds"),". See the example commands for usage with separators. To avoid using flags, consider using ",(0,t.kt)("inlineCode",{parentName:"p"},"--buildConfig")," with a ",(0,t.kt)("strong",{parentName:"p"},"build.json")," file."),(0,t.kt)("h3",{id:"platform"},"platform"),(0,t.kt)("p",null,"The platform to build (e.g. ",(0,t.kt)("inlineCode",{parentName:"p"},"android"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"ios"),")"),(0,t.kt)("h3",{id:"options"},"Options"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"--no-build"),": Do not invoke an Ionic build\n"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"--debug"),": Mark as a debug build\n"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"--release"),": Mark as a release build\n"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"--device"),": Deploy build to a device\n"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"--emulator"),": Deploy build to an emulator\n"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"--prod"),": Flag to use the ",(0,t.kt)("inlineCode",{parentName:"li"},"production")," configuration\n")),(0,t.kt)("h3",{id:"advanced-options"},"Advanced Options"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"--buildConfig=<file>"),": Use the specified build configuration\n"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"--configuration=<conf>"),": Specify the configuration to use (or ",(0,t.kt)("inlineCode",{parentName:"li"},"-c"),")\n"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"--source-map"),": Output source maps\n")),(0,t.kt)("h2",{id:"examples"},"Examples"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},'$ ionic cordova build android\n$ ionic cordova build android --buildConfig=build.json\n$ ionic cordova build android --prod --release -- -- --gradleArg=-PcdvBuildMultipleApks=true\n$ ionic cordova build android --prod --release -- -- --keystore=filename.keystore --alias=myalias\n$ ionic cordova build android --prod --release -- -- --minSdkVersion=21\n$ ionic cordova build android --prod --release -- -- --versionCode=55\n$ ionic cordova build android --prod --release --buildConfig=build.json\n$ ionic cordova build ios\n$ ionic cordova build ios --buildConfig=build.json\n$ ionic cordova build ios --prod --release\n$ ionic cordova build ios --prod --release -- --developmentTeam="ABCD" --codeSignIdentity="iPhone Developer" --packageType="app-store"\n$ ionic cordova build ios --prod --release --buildConfig=build.json\n')))}p.isMDXComponent=!0}}]);