"use strict";(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[4216],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,k=u["".concat(o,".").concat(m)]||u[m]||d[m]||l;return n?a.createElement(k,i(i({ref:t},c),{},{components:n})):a.createElement(k,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},94996:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),i=["components"],s={title:"Screen Reader Capacitor Plugin API",description:"The Screen Reader API provides access to TalkBack/VoiceOver/etc. and provides simple text-to-speech capabilities for visual accessibility.",editUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/screen-reader/README.md",editApiUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/screen-reader/src/definitions.ts",sidebar_label:"Screen Reader"},o="@capacitor/screen-reader",p={unversionedId:"native/screen-reader",id:"version-v6/native/screen-reader",isDocsHomePage:!1,title:"Screen Reader Capacitor Plugin API",description:"The Screen Reader API provides access to TalkBack/VoiceOver/etc. and provides simple text-to-speech capabilities for visual accessibility.",source:"@site/versioned_docs/version-v6/native/screen-reader.md",sourceDirName:"native",slug:"/native/screen-reader",permalink:"/docs/v6/native/screen-reader",editUrl:"https://github.com/ionic-team/capacitor-plugins/edit/main/screen-reader/README.md",tags:[],version:"v6",frontMatter:{title:"Screen Reader Capacitor Plugin API",description:"The Screen Reader API provides access to TalkBack/VoiceOver/etc. and provides simple text-to-speech capabilities for visual accessibility.",editUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/screen-reader/README.md",editApiUrl:"https://github.com/ionic-team/capacitor-plugins/blob/main/screen-reader/src/definitions.ts",sidebar_label:"Screen Reader"},sidebar:"version-v6/native",previous:{title:"Push Notifications",permalink:"/docs/v6/native/push-notifications"},next:{title:"Share",permalink:"/docs/v6/native/share"}},c=[{value:"Install",id:"install",children:[],level:2},{value:"Example",id:"example",children:[],level:2},{value:"API",id:"api",children:[{value:"isEnabled()",id:"isenabled",children:[],level:3},{value:"speak(...)",id:"speak",children:[],level:3},{value:"addListener(&#39;stateChange&#39;, ...)",id:"addlistenerstatechange-",children:[],level:3},{value:"removeAllListeners()",id:"removealllisteners",children:[],level:3},{value:"Interfaces",id:"interfaces",children:[{value:"SpeakOptions",id:"speakoptions",children:[],level:4},{value:"PluginListenerHandle",id:"pluginlistenerhandle",children:[],level:4},{value:"ScreenReaderState",id:"screenreaderstate",children:[],level:4}],level:3},{value:"Type Aliases",id:"type-aliases",children:[{value:"StateChangeListener",id:"statechangelistener",children:[],level:4}],level:3}],level:2}],d={toc:c};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"capacitorscreen-reader"},"@capacitor/screen-reader"),(0,l.kt)("p",null,"The Screen Reader API provides access to TalkBack/VoiceOver/etc. and provides simple text-to-speech capabilities for visual accessibility."),(0,l.kt)("h2",{id:"install"},"Install"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @capacitor/screen-reader\nnpx cap sync\n")),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ScreenReader } from '@capacitor/screen-reader';\n\nScreenReader.addListener('screenReaderStateChange', ({ value }) => {\n  console.log(`Screen reader is now ${value ? 'on' : 'off'}`);\n});\n\nconst checkScreenReaderEnabled = async () => {\n  const { value } = await ScreenReader.isEnabled();\n\n  console.log('Voice over enabled? ' + value);\n};\n\nconst sayHello = async () => {\n  await ScreenReader.speak({ value: 'Hello World!' });\n};\n")),(0,l.kt)("h2",{id:"api"},"API"),(0,l.kt)("docgen-index",null,(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#isenabled"},(0,l.kt)("inlineCode",{parentName:"a"},"isEnabled()"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#speak"},(0,l.kt)("inlineCode",{parentName:"a"},"speak(...)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#addlistenerstatechange"},(0,l.kt)("inlineCode",{parentName:"a"},"addListener('stateChange', ...)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#removealllisteners"},(0,l.kt)("inlineCode",{parentName:"a"},"removeAllListeners()"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#interfaces"},"Interfaces")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-aliases"},"Type Aliases")))),(0,l.kt)("docgen-api",null,(0,l.kt)("h3",{id:"isenabled"},"isEnabled()"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"isEnabled() => Promise<{ value: boolean; }>\n")),(0,l.kt)("p",null,"Whether a Screen Reader is currently active."),(0,l.kt)("p",null,"This method is not supported on web (it is not possible to detect Screen\nReaders)."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns:")," ",(0,l.kt)("code",null,"Promise","<","{ value: boolean; }",">")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"speak"},"speak(...)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"speak(options: SpeakOptions) => Promise<void>\n")),(0,l.kt)("p",null,"Text-to-Speech functionality."),(0,l.kt)("p",null,"This function will only work if a Screen Reader is currently active."),(0,l.kt)("p",null,"On web, browsers must support the ",(0,l.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis"},"SpeechSynthesis\nAPI"),", or\nthis method will throw an error."),(0,l.kt)("p",null,"For more text-to-speech capabilities, please see the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/capacitor-community/text-to-speech"},"Capacitor Community\nText-to-Speech\nplugin"),"."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,(0,l.kt)("a",{href:"#speakoptions"},"SpeakOptions")))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"addlistenerstatechange-"},"addListener('stateChange', ...)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"addListener(eventName: 'stateChange', listener: StateChangeListener) => Promise<PluginListenerHandle> & PluginListenerHandle\n")),(0,l.kt)("p",null,"Add a listener for when the screen reader is turned on or off."),(0,l.kt)("p",null,"This event used to be named ",(0,l.kt)("inlineCode",{parentName:"p"},"'accessibilityScreenReaderStateChange'"),"."),(0,l.kt)("p",null,"This method is not supported on web (it is not possible to detect Screen\nReaders)."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"eventName"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"'stateChange'"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"listener"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,(0,l.kt)("a",{href:"#statechangelistener"},"StateChangeListener")))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns:")," ",(0,l.kt)("code",null,"Promise","<",(0,l.kt)("a",{href:"#pluginlistenerhandle"},"PluginListenerHandle"),">"," & ",(0,l.kt)("a",{href:"#pluginlistenerhandle"},"PluginListenerHandle"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"removealllisteners"},"removeAllListeners()"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"removeAllListeners() => Promise<void>\n")),(0,l.kt)("p",null,"Remove all the listeners that are attached to this plugin."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since:")," 1.0.0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"interfaces"},"Interfaces"),(0,l.kt)("h4",{id:"speakoptions"},"SpeakOptions"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Since"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to speak."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"language"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The language to speak the text in, as its ",(0,l.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes"},"ISO 639-1 Code"),' (e.g.: "en"). This option is only supported on Android.'),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,l.kt)("h4",{id:"pluginlistenerhandle"},"PluginListenerHandle"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"remove"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"() =",">"," Promise","<","void",">"))))),(0,l.kt)("h4",{id:"screenreaderstate"},"ScreenReaderState"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Since"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether a Screen Reader is currently active."),(0,l.kt)("td",{parentName:"tr",align:null},"1.0.0")))),(0,l.kt)("h3",{id:"type-aliases"},"Type Aliases"),(0,l.kt)("h4",{id:"statechangelistener"},"StateChangeListener"),(0,l.kt)("code",null,"(state: ",(0,l.kt)("a",{href:"#screenreaderstate"},"ScreenReaderState"),"): void")))}u.isMDXComponent=!0}}]);